class Animals:
    def __init__(self, name, weight, voice):
        self.name = name
        self.weight = weight
        self.voice = voice

    def to_feed(self):
        print('feed', self.name)

    def voice(self):
        print('voice', self.name, self.voice)

    def product(self):
        raise NotImplementedError("Please Implement this method")


class Sheep(Animals):
    def __init__(self, name, weight):
        super().__init__(name, weight, 'I am Sheep')

    def cut(self):
        print('cut', self.name)

    def product(self):
        self.cut()


class Milk_animal(Animals):
    def milk(self):
        print('milk', self.name)

    def product(self):
        self.milk()


class Cow(Milk_animal):
    def __init__(self, name, weight):
        super().__init__(name, weight, 'I am Cow')


class Goat(Milk_animal):
    def __init__(self, name, weight):
        super().__init__(name, weight, 'I am Goat')


class Bird(Animals):
    def __init__(self, name, weight, voice):
        super().__init__(name, weight, voice)

    def to_egg(self):
        print('egg', self.name)

    def product(self):
        self.to_egg()


class Goose(Bird):
    def __init__(self, name, weight):
        super().__init__(name, weight, 'I am Goose')


class Chicken(Bird):
    def __init__(self, name, weight):
        super().__init__(name, weight, 'I am Chick')


class Duck(Bird):
    def __init__(self, name, weight):
        super().__init__(name, weight, 'I am Duck')


#Для каждого животного из списка должен существовать экземпляр класса.'

goose1 = Goose('Gray', 3)
goose2 = Goose('White', 2.8)
cow = Cow("Mumu", 55)
sheep1 = Sheep('Sheepster', 30)
sheep2 = Sheep('Sheepman', 35)
goat1 = Goat('Roga', 5)
goat2 = Goat('Kopyta', 5.5)
chicken1 = Chicken('Ko-Ko', 2)
chicken2 = Chicken('Kuka-reku', 1.9)
duck = Duck('Kryakva', 1.9)
animals = [goose1, goose2, cow, sheep1, sheep2, chicken1, chicken2, goat1, goat2, duck]

# Каждое животное требуется накормить и подоить/постричь/собрать яйца, если надо.'
for animal in animals:
    animal.to_feed()
print('--product animals')
for animal in animals:
    animal.product()

print('\n')

# Необходимо посчитать общий вес всех животных(экземпляров класса);
total_weight = 0
heaviest_animal = None
for animal in animals:
    total_weight += animal.weight
print('Общий вес: {}'.format(total_weight))

# Вывести название самого тяжелого животного.
for animal in animals:
    if heaviest_animal is None:
        heaviest_animal = animal
    elif animal.weight > heaviest_animal.weight:
        heaviest_animal = animal
print('Самое тяжелое животное: ', heaviest_animal.name, heaviest_animal.weight)
